SELECT 
    DATE(A.TIME_EXTRACTED) TIME_EXTRACTED, 
    A.ID LOAN_ID,
    A.LOAN_NAME,
    B.ID ACCOUNT_HOLDER_ID,
    CASE WHEN C.FIRST_LOAN = 1 THEN 'NO'
         WHEN C.FIRST_LOAN IS NULL THEN 'YES'
         ELSE ''
    END CLIENT_RECUR_FLAG,
    B.MOBILE_PHONE,
    B.FIRST_NAME,
    B.LAST_NAME,
    TO_CHAR(A.LOCAL_CREATION_DATE, 'YYYY-MM-DD HH24:MI:SS') CREATION_DATE,
    TO_CHAR(A.LOCAL_DISBURSEMENT_DETAILS_DISBURSEMENT_DATE, 'YYYY-MM-DD HH24:MI:SS') DISBURSEMENT_DATE,
    CASE WHEN A.SCHEDULE_SETTINGS_REPAYMENT_PERIOD_UNIT = 'DAYS' THEN TO_CHAR(DATEADD(DAY, A.SCHEDULE_SETTINGS_REPAYMENT_PERIOD_COUNT, A.LOCAL_DISBURSEMENT_DETAILS_DISBURSEMENT_DATE), 'YYYY-MM-DD HH24:MI:SS')
         WHEN A.SCHEDULE_SETTINGS_REPAYMENT_PERIOD_UNIT = 'MONTHS' THEN TO_CHAR(DATEADD(MONTH, A.SCHEDULE_SETTINGS_REPAYMENT_PERIOD_COUNT, A.LOCAL_DISBURSEMENT_DETAILS_DISBURSEMENT_DATE), 'YYYY-MM-DD HH24:MI:SS')
    END EXPECTED_MATURITY_DATE,
    A.ACCOUNT_STATE,
    CASE WHEN A.DAYS_LATE < 0 THEN 0
         ELSE IFNULL(A.DAYS_LATE, 0)
    END DAYS_LATE,
    CAST(A.BALANCES_PRINCIPAL_BALANCE AS FLOAT) BALANCES_PRINCIPAL_BALANCE,
    CAST(A.BALANCES_FEES_BALANCE AS FLOAT) BALANCES_FEES_BALANCE,
    CAST(A.BALANCES_INTEREST_BALANCE AS FLOAT) BALANCES_INTEREST_BALANCE,
    CAST(A.ACCRUED_INTEREST AS FLOAT) ACCRUED_INTEREST,
    CAST(A.ACCRUED_PENALTY AS FLOAT) ACCRUED_PENALTY,
    A.BALANCES_PRINCIPAL_BALANCE + A.BALANCES_FEES_BALANCE + A.BALANCES_INTEREST_BALANCE + A.ACCRUED_INTEREST + A.ACCRUED_PENALTY IFRS9_DEBT_AMOUNT
    FROM INFORMATION_DELIVERY_PROD.MFS_LENDING.INFO_MMB_PY_LOAN_ACCOUNTS A
    LEFT JOIN (
        SELECT ENCODED_KEY, FIRST_NAME, LAST_NAME, TIME_EXTRACTED,ID, MOBILE_PHONE
        FROM INFORMATION_DELIVERY_PROD.MFS_LENDING.INFO_MMB_PY_CLIENTS
        QUALIFY ROW_NUMBER() OVER(PARTITION BY ID ORDER BY TIME_EXTRACTED DESC) = 1
    ) B
    ON A.ACCOUNT_HOLDER_KEY = B.ENCODED_KEY
    LEFT JOIN (
        SELECT ENCODED_KEY, 1 FIRST_LOAN
        FROM INFORMATION_DELIVERY_PROD.MFS_LENDING.INFO_MMB_PY_LOAN_ACCOUNTS
        QUALIFY ROW_NUMBER() OVER(PARTITION BY ACCOUNT_HOLDER_KEY ORDER BY LOCAL_CREATION_DATE ASC) = 1
    ) C
    ON C.ENCODED_KEY = A.ENCODED_KEY
    WHERE 
     DATE(A.TIME_EXTRACTED) BETWEEN '{start_date}' AND '{end_date}' AND
    A.ACCOUNT_STATE IN ('ACTIVE', 'ACTIVE_IN_ARREARS') 
    AND IFNULL(A.ACCOUNT_SUB_STATE,'X')<>'WITHDRAWN'
    QUALIFY ROW_NUMBER() OVER(PARTITION BY A.ENCODED_KEY, DATE(A.TIME_EXTRACTED) ORDER BY A.TIME_EXTRACTED DESC) = 1